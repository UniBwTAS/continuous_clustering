Interessante Überlegungen/Analysen:

- Range Image in Odom/Sensor
  - Odom:
    - Such-Rechteck um Punkt ist gleich Orientiert wie Odom Achsen (vor allem Nützlich wenn nicht kugelförmig gesucht wird; z.B. Ellipsoid oder Zylinder; kann durch while Schleife teilweise kompensiert werden)
    - Durch Ego-Motion Correction können sich nahe und entfernte Objekte im Range Image überlagern -> Nicht Gut: Punkte gehen wohl verloren
    - Besser Vergleichbar mit RangeImages von anderen LiDAR Sensoren
  - Sensor:
    - Keine Punkte gehen verloren
    - Logischer zu generieren
    - Komplexer eine Umdrehung in Odom zu garantieren

- monoton aufsteigender azimuth winkel (Über umdrehungen hinweg) als double
    - double: 52bit Mantisse, 11bit exponent
    - also: [2^exponent, 2^(exponent + 1)[ kann in 2^52 teile aufgeteilt werden
    - Der Bereich [2^52, 2^53[ hat genau 1 als Genauigkeit
    - Wir wollen mit unserem Winkel aber genauer sein: z.B. auf 100m max 0.1m Abweichung
        - atan2(0.1, 100) = 0.0001 (0.057 Grad)
    - Jetzt will man den Bereich mit mindestens dieser Genauigkeit finden: 2^x / 2^52 <= 0.0001
        - = 2^(x - 52) -> mit (x - 52) = -14 hat man: 0.00006101 (mit -13 nur 0.000122
        - x = (-14) + 52 = 38
        - Im Bereich [2^38,2^39[ haben wir noch diese Genauigkeit
        - Das entspricht bei einer Umdrehungsfrequenz von 10Hz:
            - 2^39 / 2pi / 10 / 3600 / 24 / 365 = 277 Jahre

- Droppe Spalten statt Zeilen wenn zu viel Last??

- TODO:
    - Global column index mit uint64 statt uint32 (Nutze double? 2^52 >> 2^32)
